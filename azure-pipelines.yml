trigger:
  - master
  
pool: Default

variables:
  AzureSubscription: 'Visual Studio Enterprise â€“ MPN (e3a1efb9-d0ea-49ea-b6c2-6430cb1ab7cb)'

stages:
- stage: build
  jobs:
  - job: Api
    variables:
      buildConfiguration: 'Release'
    
    displayName: Build Api

    steps:
    - task: UseDotNet@2
      displayName: 'Use .Net Core sdk '
      inputs:
        useGlobalJson: true

    - task: DotNetCoreCLI@2
      displayName: 'dotnet build'
      inputs:
        projects: AzureADSample.Api
        arguments: '-c $(buildConfiguration)'
          
    - task: DotNetCoreCLI@2
      displayName: 'dotnet publish'
      inputs:
        command: publish
        arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
        modifyOutputPath: false
        zipAfterPublish: false
        workingDirectory: AzureADSample.Api

    - publish: $(build.artifactstagingdirectory)
      artifact: api

  - job: Website
    displayName: Build Website

    steps:
    - task: NodeTool@0
      displayName: 'Install Node.js'
      inputs:
        versionSpec: 10.x

    - script: npm install -g @angular/cli && npm install && npm run build
      workingDirectory: AzureADSample.UI
      displayName: 'website: npm install and build'

    - publish: AzureADSample.UI/dist/browser
      artifact: website


- stage: qa
  jobs:
  - deployment: qa
    variables:

      WebsiteClientId: a36db5a2-1bd7-4b40-9e05-33bce3ff7f0a
      ApiClientId: 4ca65853-af97-437b-a505-7ba91c26f68e
      ApiUrl: https://multitenantazuread-api.azurewebsites.net/

      ApiAppName: multitenantazuread-api
      WebsiteStorage: multitenantazuread

    environment: qa
    strategy:
      runOnce:
        deploy:
          steps:
            - template: azure-deployment-steps.yml
